name: Test

on: 
  workflow_dispatch:
    inputs:
      repository:
        type: string
        description: The repository to build from
        default: MilanKlausz/ncrystal_wheels
      branch:
        type: string
        description: The repository branch to use
        default: develop
jobs:
  create-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }}

      - name: install cibuildwheel
        run: pip install cibuildwheel
        
      - name: Generate Matrix
        id: create-matrix
        run: |
          MATRIX=$(python3 -c "import subprocess, json; \
          linux_identifiers = subprocess.check_output('cibuildwheel --print-build-identifiers --platform linux', shell=True).decode().splitlines(); \
          macos_identifiers = subprocess.check_output('cibuildwheel --print-build-identifiers --platform macos', shell=True).decode().splitlines(); \
          setups = [{'os': 'ubuntu-latest', 'identifier': i} for i in linux_identifiers] + \
                   [{'os': 'macos-latest',  'identifier': i} for i in macos_identifiers]; \
          print(json.dumps(setups));")
          echo "setup_matrix={\"include\":$MATRIX}" >> $GITHUB_OUTPUT
        env: 
          CIBW_BUILD: cp39-*
          # CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          # CIBW_SKIP: pp*
    outputs:
      setups: ${{ steps.create-matrix.outputs.setup_matrix }}

  next-job:
    needs: create-matrix
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.identifier }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.create-matrix.outputs.setups) }}
    steps:
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.10"
      - name: Echo
        run: echo ${{matrix.identifier}}